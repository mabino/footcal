<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title><%= title %></title>
  <script>
    // Debug logging to see what paths are being used
    console.log('BASE_PATH from server:', '<%= BASE_PATH %>');
    const cssUrl = '<%= BASE_PATH %>/fullcalendar/main.min.css';
    const jsUrl = '<%= BASE_PATH %>/fullcalendar/main.min.js';
    console.log('CSS URL:', cssUrl);
    console.log('JS URL:', jsUrl);
    
    // Log all script and link elements
    window.addEventListener('DOMContentLoaded', () => {
      console.log('All script elements:');
      document.querySelectorAll('script').forEach((script, i) => {
        console.log(`Script ${i}:`, script.src || 'inline script');
      });
      
      console.log('All link elements:');
      document.querySelectorAll('link').forEach((link, i) => {
        console.log(`Link ${i}:`, link.href);
      });
    });
    
    // Add error event listeners to scripts
    window.addEventListener('error', function(e) {
      console.log('Resource error:', e.target.src || e.target.href, e);
    }, true);
  </script>
  
  <!-- Make sure to use the BASE_PATH variable correctly -->
  <link href="<%= BASE_PATH %>/fullcalendar/main.min.css" rel="stylesheet" />
  <script src="<%= BASE_PATH %>/fullcalendar/main.min.js"></script>
  <style>
    body { font-family: sans-serif; padding: 1em; }
    #calendar { max-width: 900px; margin: auto; }
  </style>
</head>
<body>
  <h2><%= title %></h2>
  <div id="debug-info" style="background-color: #f8f9fa; padding: 10px; margin-bottom: 20px; border: 1px solid #ddd;">
    <h3>Debug Information</h3>
    <p>BASE_PATH: <code><%= BASE_PATH %></code></p>
    <p>CSS URL: <code><%= BASE_PATH %>/fullcalendar/main.min.css</code></p>
    <p>JS URL: <code><%= BASE_PATH %>/fullcalendar/main.min.js</code></p>
    <p>Events URL: <code><%= BASE_PATH %>/events</code></p>
    <p>Current URL: <code id="current-url"></code></p>
    <p>Document Base URL: <code id="base-url"></code></p>
    <script>
      document.getElementById('current-url').textContent = window.location.href;
      document.getElementById('base-url').textContent = document.baseURI;
    </script>
  </div>
  
  <div id="legend" style="max-width: 900px; margin: auto; padding-bottom: 1em;">
    <div id="checkboxes" style="margin-top: 1em;"></div>
  </div>
  <div id="calendar"></div>
  <div id="loading" style="text-align: center; font-size: 1.2em;">Loading...</div>

  <script>
  document.addEventListener('DOMContentLoaded', async function () {
    const BASE_PATH = '<%= BASE_PATH %>';
    console.log('BASE_PATH in script:', BASE_PATH);
    
    // Check if FullCalendar is loaded
    console.log('FullCalendar loaded:', typeof FullCalendar !== 'undefined');
    
    const loading = document.getElementById('loading');
    try {
      // Use the BASE_PATH for the events URL
      const eventsUrl = `${BASE_PATH}/events`;
      console.log('Events URL:', eventsUrl);
      
      console.log('Fetching events from:', eventsUrl);
      const res = await fetch(eventsUrl);
      if (!res.ok) {
        console.error('Events fetch failed with status:', res.status);
        throw new Error(`HTTP ${res.status}`);
      }
      
      let responseText;
      try {
        responseText = await res.text();
        console.log('Response text (first 100 chars):', responseText.substring(0, 100));
        const data = JSON.parse(responseText);
        console.log('Parsed JSON successfully');
        var { events, feeds } = data;
      } catch (parseError) {
        console.error('JSON parse error:', parseError);
        console.error('Response text:', responseText);
        throw new Error(`JSON parse error: ${parseError.message}`);
      }
      
      loading.style.display = 'none';

      if (typeof FullCalendar === 'undefined') {
        console.error('FullCalendar is not defined');
        loading.innerText = 'Error: FullCalendar library not loaded';
        return;
      }

      const calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
        initialView: 'listWeek',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'timeGridWeek,listWeek'
        },
        events: events,
        eventDidMount: function (info) {
          const source = info.event.extendedProps.source;
          const color = feeds[source]?.color || '#888';
          info.el.style.backgroundColor = color;
          info.el.style.borderColor = color;
        }
      });

      calendar.render();

      // Generate legend and checkboxes
      const legend = document.getElementById('legend');
      const ul = document.createElement('ul');
      ul.style.listStyle = 'none';
      ul.style.paddingLeft = '0';

      const checkboxes = document.getElementById('checkboxes');

      // Add "Show All" checkbox
      const allCheckbox = document.createElement('input');
      allCheckbox.type = 'checkbox';
      allCheckbox.checked = true;
      allCheckbox.id = 'toggle-all';
      allCheckbox.addEventListener('change', function () {
        const isChecked = this.checked;
        const checkboxList = document.querySelectorAll('input[id^="toggle-feed-"]');
        checkboxList.forEach(cb => {
          cb.checked = isChecked;
        });
        updateCalendarEvents();
      });

      const allLabel = document.createElement('label');
      allLabel.htmlFor = 'toggle-all';
      allLabel.innerText = 'Show/Hide All';

      const allDiv = document.createElement('div');
      allDiv.appendChild(allCheckbox);
      allDiv.appendChild(allLabel);
      checkboxes.appendChild(allDiv);

      // Create event sources for each feed
      const eventSources = {};
      for (const [id, meta] of Object.entries(feeds)) {
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.checked = true;
        checkbox.id = `toggle-feed-${id}`;
        checkbox.addEventListener('change', function () {
          const allChecked = Array.from(document.querySelectorAll('input[id^="toggle-feed-"]'))
            .every(cb => cb.checked);
          allCheckbox.checked = allChecked;
          updateCalendarEvents();
        });

        const label = document.createElement('label');
        label.htmlFor = `toggle-feed-${id}`;
        label.innerText = meta.name;

        const li = document.createElement('li');
        li.innerHTML = `<span style="display:inline-block;width:12px;height:12px;background:${meta.color};margin-right:8px;"></span>`;
        li.appendChild(checkbox);
        li.appendChild(label);
        ul.appendChild(li);

        // Create event source for this feed
        eventSources[id] = events.filter(event => event.source === id);
      }

      legend.appendChild(ul);

      function updateCalendarEvents() {
        calendar.removeAllEvents();
        
        // Add events for checked sources
        Object.entries(eventSources).forEach(([id, sourceEvents]) => {
          const checkbox = document.getElementById(`toggle-feed-${id}`);
          if (checkbox && checkbox.checked) {
            calendar.addEventSource(sourceEvents);
          }
        });
      }
    } catch (err) {
      loading.innerText = 'Failed to load calendar data: ' + err.message;
      console.error('Error loading calendar data:', err);
    }
  });
  </script>
</body>
</html>
